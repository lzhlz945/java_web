一、jsp 页面本质上是一个 Servlet 程序。
    当我们第一次访问 jsp 页面的时候。
    Tomcat 服务器会帮我们把 jsp 页面翻译成为一个 java 源文件。
    并且对它进行编译成 为.class 字节码程序。
    我们打开 java 源文件不难发现其里面的内容是：
    jsp 翻译出来的 java 类，它间接了继 承了 HttpServlet 类。也就是说，翻译出来的是一个 Servlet 程序

二、jsp 中的常用脚本
    声明脚本(极少使用)
       声明脚本的格式是： <%! 声明 java 代码 %> 作用：
       可以给 jsp 翻译出来的 java 类定义属性和方法甚至是静态代码块。内部类等。
          <%--4、声明内部类--%>
          <%! public static class A {
          private Integer id = 12;
          private String abc = "abc";
          } %>
    表达式脚本（常用）
       表达式脚本的格式是：<%=表达式%>
       表达式脚本的作用是：的 jsp 页面上输出数据。
       由于表达式脚本翻译的内容都在_jspService() 方法中,所以_jspService()方法中的对象都可以直接使用。
       示例代码：
          <%=12 %> <br>
          <%=12.12 %> <br>
          <%="我是字符串" %><br>
          <%=map%> <br>
          <%=request.getParameter("username")%>
    代码脚本 代码脚本的格式是：
        <% java 语句 %> 代码脚本的作用是：
        可以在 jsp 页面中，编写我们自己需要的功能（写的是 java 语句）。

三、jsp 九大内置对象
   jsp 中的内置对象，是指 Tomcat 在翻译 jsp 页面成为 Servlet 源代码后，内部提供的九大对象，叫内置对象。
        request             请求对象
        response            响应对象
        session             会话对象
        application         servletContext对象
        config              servletConfig对象
        pageContext         jsp上下文对象
        page                指向jsp当前对象
        out                 jsp的输出流对象
        exception           异常对象

四、四大域对象
     pageContext  (pageContextImpl)       当前页面有效                       1
     request  (httpServletRequest)        当次请求有效                        2
     session  (httpSession)               会话内有效(打开浏览器，关闭浏览器)     3
     application (servletContext)          web项目关闭前都有效                   4  从小到大的范围

五、jsp 的常用标签
     jsp 静态包含
       <%@ include file=""%> 就是静态包含
       file 属性指定你要包含的 jsp 页面的路径 地址中第一个斜杠 / 表示为 http://ip:port/工程路径/ 映射到代码的 web 目录
       静态包含的特点：
       1、静态包含不会翻译被包含的 jsp 页面。
       2、静态包含其实是把被包含的 jsp 页面的代码拷贝到包含的位置执行输出。

     jsp 动态包含
       示例说明：
        <jsp:include page=""></jsp:include> 这是动态包含 page 属性是指定你要包含的 jsp 页面的路径
        动态包含也可以像静态包含一样。把被包含的内容执行输出到包含位置
        动态包含的特点：
          1、动态包含会把包含的 jsp 页面也翻译成为 java 代码
          2、动态包含底层代码使用如下代码去调用被包含的 jsp 页面执行输出。 JspRuntimeLibrary.include(request, response, "/include/footer.jsp", out, false);
          3、动态包含，还可以传递参数
          <jsp:include page="/include/footer.jsp">
          <jsp:param name="username" value="bbj"/>
          <jsp:param name="password" value="root"/>
          </jsp:include>

     jsp 标签-转发
       示例说明：
         <%--<jsp:forward page=""></jsp:forward> 是请求转发标签，它的功能就是请求转发 page 属性设置请求转发的路径 --%>
         <jsp:forward page="/scope2.jsp"></jsp:forward>

六、监听器

    什么是 Listener 监听器？
      1、Listener 监听器它是 JavaWeb 的三大组件之一。
         JavaWeb 的三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监 听器。
      2、Listener 它是 JavaEE 的规范，就是接口
      3、监听器的作用是，监听某种事物的变化。然后通过回调函数，反馈给客户（程序）去做一些相应的处理。

    1、实现servletContext接口的 contextInitialized()和contextDestroyed()方法
    2、contextInitialized()这里面可以得到servletContext,可以进行  servletContext.setAttribute("ss","u1s1");
    3、在web.xml中定义标签
        <listener>
           <listener-class>com.zhang.listener.MyListenerImpl</listener-class>
         </listener>
七、EL表达式

    EL 表达式的格式是：${表达式}
    EL 表达式在输出 null 值的时候，输出的是空串。
    jsp 表达式脚本输出 null 值的时候，输出的是 null 字符串。
    jsp页面不生效：
    <%@page isELIgnored="false" %>

    <c:set />
            作用：set标签可以往域中保存数据

            域对象.setAttribute(key,value);
            scope 属性设置保存到哪个域
                page表示PageContext域（默认值）
                request表示Request域
                session表示Session域
                application表示ServletContext域
            var属性设置key是多少
            value属性设置值